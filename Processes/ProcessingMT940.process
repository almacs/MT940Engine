<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pd="http://xmlns.tibco.com/bw/process/2003">
    <pd:name>Processes/ProcessingMT940.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startX>150</pd:startX>
    <pd:startY>64</pd:startY>
    <pd:returnBindings/>
    <pd:endName>End</pd:endName>
    <pd:endX>540</pd:endX>
    <pd:endY>64</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1701986931008</pd:targetNamespace>
    <pd:activity name="Java Code">
        <pd:type>com.tibco.plugin.java.JavaActivity</pd:type>
        <pd:resourceType>ae.javapalette.javaActivity</pd:resourceType>
        <pd:x>333</pd:x>
        <pd:y>69</pd:y>
        <config>
            <fileName>ProcessingMT940JavaCode</fileName>
            <packageName>Processes.ProcessingMT940</packageName>
            <fullsource>package Processes.ProcessingMT940;

import java.util.*;
import java.io.*;
import java.util.ArrayList;
import java.util.List;

import org.apache.commons.lang3.StringUtils;

import com.prowidesoftware.swift.io.RJEReader;
import com.prowidesoftware.swift.model.*;
import com.prowidesoftware.swift.model.field.*;
import com.prowidesoftware.swift.model.mt.AbstractMT;
import com.prowidesoftware.swift.model.mt.mt9xx.MT940;
import com.prowidesoftware.swift.utils.Lib;

public class ProcessingMT940JavaCode{
/****** START SET/GET METHOD, DO NOT MODIFY *****/
	protected String out_put = "";
	public String getout_put() {
		return out_put;
	}
	public void setout_put(String val) {
		out_put = val;
	}
/****** END SET/GET METHOD, DO NOT MODIFY *****/
	public ProcessingMT940JavaCode() {
		
	}
	public void invoke() throws Exception {
/* Available Variables: DO NOT MODIFY
	Out : String out_put
* Available Variables: DO NOT MODIFY *****/

		try {

            //String filePath = "C:\\u01\\mt940-bancomer.txt"; // replace with your file path
            String filePath = "C:\\u01\\input\\SALI.00004523.009.TG-0014.F230403.0640086.txt";
            String outPath="C:\\u01\\output\\output1.csv";
        
            RJEReader reader = new RJEReader(new File(filePath));
            int regs=0;	
            /*
             * Iterate the reader
             */
            while (reader.hasNext()) {
                /*
                 * Read the message.
                 */ 
                AbstractMT mt = reader.nextMT(); 
                SwiftMessage msg = mt.getSwiftMessage(); 

                StringBuffer line = new StringBuffer();
                for(int i= 0; i&lt;msg.getUnparsedTexts().size();i++){  

                   if(msg.getUnparsedTexts().getTextAsMessage(i).isType(940)) {
                       MT940 mt940 = new MT940(msg.getUnparsedTexts().getTextAsMessage(i));
                       SwiftBlock1 b1 = mt940.getSwiftMessage().getBlock1();
                       //System.out.println("b1: " + b1);
                       SwiftBlock2 b2 = mt940.getSwiftMessage().getBlock2();
                       //System.out.println("b2: " + b2);
                       SwiftBlock3 b3 = mt940.getSwiftMessage().getBlock3();
                       //System.out.println("b3: " + b3);
                       
                       
                       SwiftBlock4 b4 = mt940.getSwiftMessage().getBlock4();
                       //System.out.println("b4: " + b4);
                       SwiftBlock5 b5 = mt940.getSwiftMessage().getBlock5();
                       //System.out.println("b5: " + b5);
                       
                       for (int j=0; j&lt;b4.getFieldsByName(Field61.NAME).length;j++) {
                       
	                       Field61 tx = (Field61) b4.getFieldsByName(Field61.NAME)[j]; 
	                       Field20 tx20 = (Field20) b4.getFieldByName(Field20.NAME);
	                       Field21 tx21 = (Field21) b4.getFieldByName(Field21.NAME);
	                       Field25 tx25 = (Field25) b4.getFieldByName(Field25.NAME);
	                       Field28C tx28 = (Field28C) b4.getFieldByName(Field28C.NAME);
	                       Field86 tx86 = (Field86) b4.getFieldByName(Field86.NAME);
	                        
	                       line.append("20231129-185022|" + "SALI.00004523.009.TG-0014.F230403.0640086.txt|");
	                       
	                       if(tx.getComponent(Field61.DEBITCREDIT_MARK).equals("C")){
	                           line.append("PAGO ALUMNO" + "|");
	                       }else{
	                    	   line.append("OTROS" + "|");
	
	                       }
	                       line.append(tx.getComponent(Field61.REFERENCE_FOR_THE_ACCOUNT_OWNER)+"|");
	                       line.append(tx.getComponent(Field61.DATE)+"|");
	                       line.append(tx.getComponent(Field61.ENTRY_DATE)+"|");
	                       line.append(tx.getComponent(Field61.AMOUNT)+"|");
	                       line.append(tx.getComponent(Field61.SUPPLEMENTARY_DETAILS).trim()+"|");
	                       
	                       line.append(tx20.getComponent(Field20.REFERENCE).trim()+"|");
	                       line.append(tx21.getComponent(Field21.REFERENCE).trim()+"|");
	                       line.append(tx25.getComponent(Field25.ACCOUNT).trim()+"|");
	                       
	                       if(tx28 != null) {
	                    	   line.append(tx28.getValue().trim().replace("\r\n", "")+"|");
	                       }else {
	                    	   line.append( "|");
	                       }
	                       
	                       //all 61
	                       line.append(tx.getValue().trim().replace("\r\n", "").replace("                                                                                                                                                                                                                                                                                                                                                                                                                                                                   ", "") +"|");
	                       //all 86
	                       line.append(tx86.getValue().trim().replace("\r\n", "") );
	                       line.append("\n");
	                       
	                       regs ++;
                       }
                       
                        System.out.println(line);
                        FileWriter fw = new FileWriter(outPath, true);
                        fw.write(line.toString());
                        fw.close();
                   }
                   
                }
                System.out.println("Total Regs: "+ regs);
			}
				} catch (Exception e) {
			            e.printStackTrace();
			        }
				
	}
	
	
//	public static void main(String[] args) throws Exception {
//		// TODO Auto-generated method stub
//		ProcessingMT940JavaCode pMt940 = new ProcessingMT940JavaCode();
//		pMt940.invoke();
//
//	}

}
</fullsource>
            <outputData>
                <row>
                    <fieldName>out_put</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
            </outputData>
            <javaArchive>/Shared Resources/AliasLibrary.aliaslib</javaArchive>
            <byteCode>
                <class>
                    <name>ProcessingMT940JavaCode</name>
                    <byteCode>yv66vgAAADcBGQkAUwBsCgBUAG0IAG4IAG8IAHAHAHEHAHIKAAcAcwoABgB0CgAGAHUKAAYAdgoAYgB3BwB4CgANAG0KAGMAeQoAegB7CgB8AH0KAHwAfgoAegB/CgBjAIAHAIEKABUAggoAFQB3CgBjAIMKAGMAhAoAYwCFCgBjAIYKAGMAhwcAiAgAiQoAZwCKBwCLCACMCgBnAI0HAI4IAI8HAJAIAJEHAJIIAJMHAJQIAJUIAJYKAA0AlwkAHQCYCgAdAJkIAJoKAGEAmwgAnAgAnQkAHQCeEgAAAKIJAB0AowkAHQCkCQAdAKUJAB0ApgoAYQCnCQAgAKgKACAAmQkAIwCoCgAjAJkJACUAqQoAJQCZCgAnAKoIAKsKAGEArAgArQoAHQCqCACuCgApAKoIAK8JALAAsQoAsgCzBwC0CgBKALUKAA0AtgoASgC3CgBKALgSAAEAugoAsgC7BwC8CgBRAL0HAL4HAL8BAAdvdXRfcHV0AQASTGphdmEvbGFuZy9TdHJpbmc7AQAKZ2V0b3V0X3B1dAEAFCgpTGphdmEvbGFuZy9TdHJpbmc7AQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEACnNldG91dF9wdXQBABUoTGphdmEvbGFuZy9TdHJpbmc7KVYBAAY8aW5pdD4BAAMoKVYBAAZpbnZva2UBAA1TdGFja01hcFRhYmxlBwDABwDBBwDCBwDDBwDEBwDFBwDGBwDHAQAKRXhjZXB0aW9ucwEAClNvdXJjZUZpbGUBABxQcm9jZXNzaW5nTVQ5NDBKYXZhQ29kZS5qYXZhDABVAFYMAF0AXgEAAAEAOkM6XHUwMVxpbnB1dFxTQUxJLjAwMDA0NTIzLjAwOS5URy0wMDE0LkYyMzA0MDMuMDY0MDA4Ni50eHQBABlDOlx1MDFcb3V0cHV0XG91dHB1dDEuY3N2AQAmY29tL3Byb3dpZGVzb2Z0d2FyZS9zd2lmdC9pby9SSkVSZWFkZXIBAAxqYXZhL2lvL0ZpbGUMAF0AXAwAXQDIDADJAMoMAMsAzAwAzQDOAQAWamF2YS9sYW5nL1N0cmluZ0J1ZmZlcgwAzwDQBwDRDADSANMHANQMANUA1gwA1wDYDADZANoMANsA3AEALmNvbS9wcm93aWRlc29mdHdhcmUvc3dpZnQvbW9kZWwvbXQvbXQ5eHgvTVQ5NDAMAF0A3QwA3gDfDADgAOEMAOIA4wwA5ADlDADmAOcBAC1jb20vcHJvd2lkZXNvZnR3YXJlL3N3aWZ0L21vZGVsL2ZpZWxkL0ZpZWxkNjEBAAI2MQwA6ADpAQAtY29tL3Byb3dpZGVzb2Z0d2FyZS9zd2lmdC9tb2RlbC9maWVsZC9GaWVsZDIwAQACMjAMAOoA6wEALWNvbS9wcm93aWRlc29mdHdhcmUvc3dpZnQvbW9kZWwvZmllbGQvRmllbGQyMQEAAjIxAQAtY29tL3Byb3dpZGVzb2Z0d2FyZS9zd2lmdC9tb2RlbC9maWVsZC9GaWVsZDI1AQACMjUBAC5jb20vcHJvd2lkZXNvZnR3YXJlL3N3aWZ0L21vZGVsL2ZpZWxkL0ZpZWxkMjhDAQADMjhDAQAtY29tL3Byb3dpZGVzb2Z0d2FyZS9zd2lmdC9tb2RlbC9maWVsZC9GaWVsZDg2AQACODYBAD4yMDIzMTEyOS0xODUwMjJ8U0FMSS4wMDAwNDUyMy4wMDkuVEctMDAxNC5GMjMwNDAzLjA2NDAwODYudHh0fAwA7ADtDADuAO8MAPAA8QEAAUMMAPIA8wEADFBBR08gQUxVTU5PfAEABk9UUk9TfAwA9ADvAQAQQm9vdHN0cmFwTWV0aG9kcw8GAPUIAPYMAPcA+AwA+QDvDAD6AO8MAPsA7wwA/ADvDAD9AFgMAP4A7wwA/wDvDAEAAFgBAAINCgwBAQECAQABfAEBwyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICABAAEKBwEDDAEEAQUHAQYMAQcBCAEAEmphdmEvaW8vRmlsZVdyaXRlcgwAXQEJDAEKAFgMAQsAXAwBDABeCAENDAD3APEMAQcAXAEAE2phdmEvbGFuZy9FeGNlcHRpb24MAQ4AXgEAMVByb2Nlc3Nlcy9Qcm9jZXNzaW5nTVQ5NDAvUHJvY2Vzc2luZ01UOTQwSmF2YUNvZGUBABBqYXZhL2xhbmcvT2JqZWN0AQAQamF2YS9sYW5nL1N0cmluZwEALWNvbS9wcm93aWRlc29mdHdhcmUvc3dpZnQvbW9kZWwvbXQvQWJzdHJhY3RNVAEALGNvbS9wcm93aWRlc29mdHdhcmUvc3dpZnQvbW9kZWwvU3dpZnRNZXNzYWdlAQArY29tL3Byb3dpZGVzb2Z0d2FyZS9zd2lmdC9tb2RlbC9Td2lmdEJsb2NrMQEAK2NvbS9wcm93aWRlc29mdHdhcmUvc3dpZnQvbW9kZWwvU3dpZnRCbG9jazIBACtjb20vcHJvd2lkZXNvZnR3YXJlL3N3aWZ0L21vZGVsL1N3aWZ0QmxvY2szAQArY29tL3Byb3dpZGVzb2Z0d2FyZS9zd2lmdC9tb2RlbC9Td2lmdEJsb2NrNAEAK2NvbS9wcm93aWRlc29mdHdhcmUvc3dpZnQvbW9kZWwvU3dpZnRCbG9jazUBABEoTGphdmEvaW8vRmlsZTspVgEAB2hhc05leHQBAAMoKVoBAAZuZXh0TVQBADEoKUxjb20vcHJvd2lkZXNvZnR3YXJlL3N3aWZ0L21vZGVsL210L0Fic3RyYWN0TVQ7AQAPZ2V0U3dpZnRNZXNzYWdlAQAwKClMY29tL3Byb3dpZGVzb2Z0d2FyZS9zd2lmdC9tb2RlbC9Td2lmdE1lc3NhZ2U7AQAQZ2V0VW5wYXJzZWRUZXh0cwEANCgpTGNvbS9wcm93aWRlc29mdHdhcmUvc3dpZnQvbW9kZWwvVW5wYXJzZWRUZXh0TGlzdDsBADBjb20vcHJvd2lkZXNvZnR3YXJlL3N3aWZ0L21vZGVsL1VucGFyc2VkVGV4dExpc3QBAARzaXplAQAVKClMamF2YS9sYW5nL0ludGVnZXI7AQARamF2YS9sYW5nL0ludGVnZXIBAAhpbnRWYWx1ZQEAAygpSQEAB3ZhbHVlT2YBABYoSSlMamF2YS9sYW5nL0ludGVnZXI7AQAQZ2V0VGV4dEFzTWVzc2FnZQEAQyhMamF2YS9sYW5nL0ludGVnZXI7KUxjb20vcHJvd2lkZXNvZnR3YXJlL3N3aWZ0L21vZGVsL1N3aWZ0TWVzc2FnZTsBAAZpc1R5cGUBAAQoSSlaAQAxKExjb20vcHJvd2lkZXNvZnR3YXJlL3N3aWZ0L21vZGVsL1N3aWZ0TWVzc2FnZTspVgEACWdldEJsb2NrMQEALygpTGNvbS9wcm93aWRlc29mdHdhcmUvc3dpZnQvbW9kZWwvU3dpZnRCbG9jazE7AQAJZ2V0QmxvY2syAQAvKClMY29tL3Byb3dpZGVzb2Z0d2FyZS9zd2lmdC9tb2RlbC9Td2lmdEJsb2NrMjsBAAlnZXRCbG9jazMBAC8oKUxjb20vcHJvd2lkZXNvZnR3YXJlL3N3aWZ0L21vZGVsL1N3aWZ0QmxvY2szOwEACWdldEJsb2NrNAEALygpTGNvbS9wcm93aWRlc29mdHdhcmUvc3dpZnQvbW9kZWwvU3dpZnRCbG9jazQ7AQAJZ2V0QmxvY2s1AQAvKClMY29tL3Byb3dpZGVzb2Z0d2FyZS9zd2lmdC9tb2RlbC9Td2lmdEJsb2NrNTsBAA9nZXRGaWVsZHNCeU5hbWUBAEIoTGphdmEvbGFuZy9TdHJpbmc7KVtMY29tL3Byb3dpZGVzb2Z0d2FyZS9zd2lmdC9tb2RlbC9maWVsZC9GaWVsZDsBAA5nZXRGaWVsZEJ5TmFtZQEAQShMamF2YS9sYW5nL1N0cmluZzspTGNvbS9wcm93aWRlc29mdHdhcmUvc3dpZnQvbW9kZWwvZmllbGQvRmllbGQ7AQAGYXBwZW5kAQAsKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9sYW5nL1N0cmluZ0J1ZmZlcjsBABBERUJJVENSRURJVF9NQVJLAQATTGphdmEvbGFuZy9JbnRlZ2VyOwEADGdldENvbXBvbmVudAEAFShJKUxqYXZhL2xhbmcvU3RyaW5nOwEABmVxdWFscwEAFShMamF2YS9sYW5nL09iamVjdDspWgEAH1JFRkVSRU5DRV9GT1JfVEhFX0FDQ09VTlRfT1dORVIKAQ8BEAEAAgF8AQAXbWFrZUNvbmNhdFdpdGhDb25zdGFudHMBACYoTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZhL2xhbmcvU3RyaW5nOwEABERBVEUBAApFTlRSWV9EQVRFAQAGQU1PVU5UAQAVU1VQUExFTUVOVEFSWV9ERVRBSUxTAQAEdHJpbQEACVJFRkVSRU5DRQEAB0FDQ09VTlQBAAhnZXRWYWx1ZQEAB3JlcGxhY2UBAEQoTGphdmEvbGFuZy9DaGFyU2VxdWVuY2U7TGphdmEvbGFuZy9DaGFyU2VxdWVuY2U7KUxqYXZhL2xhbmcvU3RyaW5nOwEAEGphdmEvbGFuZy9TeXN0ZW0BAANvdXQBABVMamF2YS9pby9QcmludFN0cmVhbTsBABNqYXZhL2lvL1ByaW50U3RyZWFtAQAHcHJpbnRsbgEAFShMamF2YS9sYW5nL09iamVjdDspVgEAFihMamF2YS9sYW5nL1N0cmluZztaKVYBAAh0b1N0cmluZwEABXdyaXRlAQAFY2xvc2UBAA1Ub3RhbCBSZWdzOiABAQAPcHJpbnRTdGFja1RyYWNlBwERDAD3ARUBACRqYXZhL2xhbmcvaW52b2tlL1N0cmluZ0NvbmNhdEZhY3RvcnkHARcBAAZMb29rdXABAAxJbm5lckNsYXNzZXMBAJgoTGphdmEvbGFuZy9pbnZva2UvTWV0aG9kSGFuZGxlcyRMb29rdXA7TGphdmEvbGFuZy9TdHJpbmc7TGphdmEvbGFuZy9pbnZva2UvTWV0aG9kVHlwZTtMamF2YS9sYW5nL1N0cmluZztbTGphdmEvbGFuZy9PYmplY3Q7KUxqYXZhL2xhbmcvaW52b2tlL0NhbGxTaXRlOwcBGAEAJWphdmEvbGFuZy9pbnZva2UvTWV0aG9kSGFuZGxlcyRMb29rdXABAB5qYXZhL2xhbmcvaW52b2tlL01ldGhvZEhhbmRsZXMAIQBTAFQAAAABAAQAVQBWAAAABAABAFcAWAABAFkAAAAdAAEAAQAAAAUqtAABsAAAAAEAWgAAAAYAAQAAABUAAQBbAFwAAQBZAAAAIgACAAIAAAAGKiu1AAGxAAAAAQBaAAAACgACAAAAGAAFABkAAQBdAF4AAQBZAAAAKwACAAEAAAALKrcAAioSA7UAAbEAAAABAFoAAAAOAAMAAAAbAAQAEwAKAB0AAQBfAF4AAgBZAAAEpQAFABYAAAKeEgRMEgVNuwAGWbsAB1krtwAItwAJTgM2BC22AAqZAngttgALOgUZBbYADDoGuwANWbcADjoHAzYIFQgZBrYAD7YAELYAEaICPxkGtgAPFQi4ABK2ABMRA6y2ABSZAiO7ABVZGQa2AA8VCLgAErYAE7cAFjoJGQm2ABe2ABg6ChkJtgAXtgAZOgsZCbYAF7YAGjoMGQm2ABe2ABs6DRkJtgAXtgAcOg4DNg8VDxkNEh62AB++ogGpGQ0SHrYAHxUPMsAAHToQGQ0SIbYAIsAAIDoRGQ0SJLYAIsAAIzoSGQ0SJrYAIsAAJToTGQ0SKLYAIsAAJzoUGQ0SKrYAIsAAKToVGQcSK7YALFcZELIALbYAEbYALhIvtgAwmQAOGQcSMbYALFenAAsZBxIytgAsVxkHGRCyADO2ABG2AC66ADQAALYALFcZBxkQsgA1tgARtgAuugA0AAC2ACxXGQcZELIANrYAEbYALroANAAAtgAsVxkHGRCyADe2ABG2AC66ADQAALYALFcZBxkQsgA4tgARtgAutgA5ugA0AAC2ACxXGQcZEbIAOrYAEbYAO7YAOboANAAAtgAsVxkHGRKyADy2ABG2AD22ADm6ADQAALYALFcZBxkTsgA+tgARtgA/tgA5ugA0AAC2ACxXGRTGACAZBxkUtgBAtgA5EkESA7YAQroANAAAtgAsV6cACxkHEkO2ACxXGQcZELYARLYAORJBEgO2AEISRRIDtgBCugA0AAC2ACxXGQcZFbYARrYAORJBEgO2AEK2ACxXGQcSR7YALFeEBAGEDwGn/lCyAEgZB7YASbsASlksBLcASzoPGQ8ZB7YATLYATRkPtgBOhAgBp/23sgBIFQS6AE8AALYAUKf9h6cACEwrtgBSsQABAAAClQKYAFEAAgBaAAAA2gA2AAAAJgADACcABgApABYAKgAZAC4AIAAyACYAMwAtADUANgA2AEkAOABfADkAdQA6AH8APACJAD4AkwBCAJ0ARACnAEcAtwBJAMYASgDSAEsA3gBMAOoATQD2AE4BAgBQAQoAUgEdAFMBKABVATAAWAFGAFkBXABaAXIAWwGIAFwBoQBeAboAXwHTAGAB7ABiAfEAYwIOAGUCFgBpAjcAawJMAGwCVABuAlcARwJdAHECZQByAnAAcwJ6AHQCfwA2AoUAeAKSAHkClQB8ApgAegKZAHsCnQB+AGAAAAENAA3/ABkABQcAUwcAYQcAYQcABgEAAP8AHwAJBwBTBwBhBwBhBwAGAQcAYgcAYwcADQEAAP8AcAAQBwBTBwBhBwBhBwAGAQcAYgcAYwcADQEHABUHAGQHAGUHAGYHAGcHAGgBAAD/AH0AFgcAUwcAYQcAYQcABgEHAGIHAGMHAA0BBwAVBwBkBwBlBwBmBwBnBwBoAQcAHQcAIAcAIwcAJQcAJwcAKQAAB/sA3Qf/AEYADwcAUwcAYQcAYQcABgEHAGIHAGMHAA0BBwAVBwBkBwBlBwBmBwBnBwBoAAD/ACEACQcAUwcAYQcAYQcABgEHAGIHAGMHAA0BAAD6AAX/AA8AAQcAUwAAQgcAUQQAaQAAAAQAAQBRAAMAagAAAAIAawEUAAAACgABARIBFgETABkAnwAAAA4AAgCgAAEAoQCgAAEAuQ==</byteCode>
                </class>
            </byteCode>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Java Code</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Java Code</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>