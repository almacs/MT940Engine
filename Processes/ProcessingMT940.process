<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns="http://www.tibco.com/pe/DeployedVarsType">
    <pd:name>Processes/ProcessingMT940.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startX>150</pd:startX>
    <pd:startY>64</pd:startY>
    <pd:returnBindings/>
    <pd:endName>End</pd:endName>
    <pd:endX>540</pd:endX>
    <pd:endY>64</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1701986931008</pd:targetNamespace>
    <pd:activity name="Java Code">
        <pd:type>com.tibco.plugin.java.JavaActivity</pd:type>
        <pd:resourceType>ae.javapalette.javaActivity</pd:resourceType>
        <pd:x>333</pd:x>
        <pd:y>69</pd:y>
        <config>
            <fileName>ProcessingMT940JavaCode</fileName>
            <packageName>Processes.ProcessingMT940</packageName>
            <fullsource>package Processes.ProcessingMT940;

import java.util.*;
import java.io.*;
import java.util.ArrayList;
import java.util.List;

import org.apache.commons.lang3.StringUtils;

import com.prowidesoftware.swift.io.RJEReader;
import com.prowidesoftware.swift.model.*;
import com.prowidesoftware.swift.model.field.*;
import com.prowidesoftware.swift.model.mt.AbstractMT;
import com.prowidesoftware.swift.model.mt.mt9xx.MT940;
import com.prowidesoftware.swift.utils.Lib;

public class ProcessingMT940JavaCode{
/****** START SET/GET METHOD, DO NOT MODIFY *****/
	protected String inputDir = "";
	protected String outputDir = "";
	protected String outputFileName = "";
	protected String inputFileName = "";
	protected String bankAccount = "";
	public String getinputDir() {
		return inputDir;
	}
	public void setinputDir(String val) {
		inputDir = val;
	}
	public String getoutputDir() {
		return outputDir;
	}
	public void setoutputDir(String val) {
		outputDir = val;
	}
	public String getoutputFileName() {
		return outputFileName;
	}
	public void setoutputFileName(String val) {
		outputFileName = val;
	}
	public String getinputFileName() {
		return inputFileName;
	}
	public void setinputFileName(String val) {
		inputFileName = val;
	}
	public String getbankAccount() {
		return bankAccount;
	}
	public void setbankAccount(String val) {
		bankAccount = val;
	}
/****** END SET/GET METHOD, DO NOT MODIFY *****/
	public ProcessingMT940JavaCode() {
		
	}
	public void invoke() throws Exception {
/* Available Variables: DO NOT MODIFY
	In  : String inputDir
	In  : String outputDir
	In  : String outputFileName
	In  : String inputFileName
	Out : String outputFileName
	Out : String bankAccount
* Available Variables: DO NOT MODIFY *****/

		try {

			String filePath = this.getinputDir()+ this.getinputFileName();
            String outPath= this.getoutputDir() + this.getoutputFileName();
        
            RJEReader reader = new RJEReader(new File(filePath));
            int regs=0;	
            /*
             * Iterate the reader
             */
            while (reader.hasNext()) {
                /*
                 * Read the message.
                 */ 
                AbstractMT mt = reader.nextMT(); 
                SwiftMessage msg = mt.getSwiftMessage(); 

                StringBuffer line = new StringBuffer();
                for(int i= 0; i&lt;msg.getUnparsedTexts().size();i++){  

                   if(msg.getUnparsedTexts().getTextAsMessage(i).isType(940)) {
                       MT940 mt940 = new MT940(msg.getUnparsedTexts().getTextAsMessage(i));
                       SwiftBlock1 b1 = mt940.getSwiftMessage().getBlock1();
                       //System.out.println("b1: " + b1);
                       SwiftBlock2 b2 = mt940.getSwiftMessage().getBlock2();
                       //System.out.println("b2: " + b2);
                       SwiftBlock3 b3 = mt940.getSwiftMessage().getBlock3();
                       //System.out.println("b3: " + b3);
                       
                       
                       SwiftBlock4 b4 = mt940.getSwiftMessage().getBlock4();
                       //System.out.println("b4: " + b4);
                       SwiftBlock5 b5 = mt940.getSwiftMessage().getBlock5();
                       //System.out.println("b5: " + b5);
                       //Account Number to identify the Business Unit
                       this.setoutputFileName(b4.getTagValue(Field25.NAME).trim());
                       
                       for (int j=0; j&lt;b4.getFieldsByName(Field61.NAME).length;j++) {
                       
	                       Field61 tx = (Field61) b4.getFieldsByName(Field61.NAME)[j]; 
	                       Field20 tx20 = (Field20) b4.getFieldByName(Field20.NAME);
	                       Field21 tx21 = (Field21) b4.getFieldByName(Field21.NAME);
	                       Field25 tx25 = (Field25) b4.getFieldByName(Field25.NAME);
	                       Field28C tx28 = (Field28C) b4.getFieldByName(Field28C.NAME);
	                       Field86 tx86 = (Field86) b4.getFieldByName(Field86.NAME);
	                        
	                       line.append("20231129-185022|" + this.getinputFileName() +"|");
	                       
	                       if(tx.getComponent(Field61.DEBITCREDIT_MARK).equals("C")){
	                           line.append("PAGO ALUMNO" + "|");
	                       }else{
	                    	   line.append("OTROS" + "|");
	
	                       }
	                       line.append(tx.getComponent(Field61.REFERENCE_FOR_THE_ACCOUNT_OWNER)+"|");
	                       line.append(tx.getComponent(Field61.DATE)+"|");
	                       line.append(tx.getComponent(Field61.ENTRY_DATE)+"|");
	                       line.append(tx.getComponent(Field61.AMOUNT)+"|");
	                       line.append(cleanText(tx.getComponent(Field61.SUPPLEMENTARY_DETAILS))+"|");
	                       
	                       line.append(cleanText(tx20.getComponent(Field20.REFERENCE))+"|");
	                       line.append(cleanText(tx21.getComponent(Field21.REFERENCE))+"|");
	                       line.append(cleanText(tx25.getComponent(Field25.ACCOUNT))+"|");
	                       
	                       if(tx28 != null) {
	                    	   line.append(cleanText(tx28.getValue())+"|");
	                       }else {
	                    	   line.append( "|");
	                       }
	                       
	                       //all 61
	                       line.append(cleanText(tx.getValue()).replace("                                                                                                                                                                                                                                                                                                                                                                                                                                                                   ", "") +"|");
	                       //all 86
	                       line.append(cleanText(tx86.getValue()));
	                       line.append("\n");
	                       
	                       regs ++;
	                        
                       }
                       
                       
                       	outPath= this.getoutputDir() + this.getoutputFileName()+ "_output.csv";
                       
                        System.out.println(line);
                        FileWriter fw = new FileWriter(outPath, true);
                        fw.write(line.toString());
                        fw.close();
                   }
                   
                }
                System.out.println("Total Regs: "+ regs);
			}
				} catch (Exception e) {
			            e.printStackTrace();
			        }
				
	}
	
	public String cleanText(String text) {
		String textResult = text.trim();
		
		textResult = textResult.replace("\r", "").replace("\n","");
		
		return textResult;
	}
}
</fullsource>
            <javaArchive>/Shared Resources/AliasLibrary.aliaslib</javaArchive>
            <inputData>
                <row>
                    <fieldName>inputDir</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
                <row>
                    <fieldName>outputDir</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
                <row>
                    <fieldName>outputFileName</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
                <row>
                    <fieldName>inputFileName</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
            </inputData>
            <outputData>
                <row>
                    <fieldName>outputFileName</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
                <row>
                    <fieldName>bankAccount</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
            </outputData>
            <byteCode>
                <class>
                    <name>ProcessingMT940JavaCode</name>
                    <byteCode></byteCode>
                </class>
            </byteCode>
        </config>
        <pd:inputBindings>
            <javaCodeActivityInput>
                <inputDir>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ProjConfig/inputDir"/>
                </inputDir>
                <outputDir>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ProjConfig/outputDir"/>
                </outputDir>
                <outputFileName>
                    <xsl:value-of select="'output3.csv'"/>
                </outputFileName>
            </javaCodeActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Java Code</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Java Code</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>