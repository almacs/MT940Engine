<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:pfx2="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns2="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns1="http://www.tibco.com/pe/EngineTypes">
    <pd:name>Processes/ProcessingMT940.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startX>60</pd:startX>
    <pd:startY>103</pd:startY>
    <pd:returnBindings/>
    <pd:endName>End</pd:endName>
    <pd:endX>1094</pd:endX>
    <pd:endY>122</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1701986931008</pd:targetNamespace>
    <pd:activity name="List Files">
        <pd:type>com.tibco.plugin.file.ListFilesActivity</pd:type>
        <pd:resourceType>ae.activities.ListFilesActivity</pd:resourceType>
        <pd:x>307</pd:x>
        <pd:y>105</pd:y>
        <config>
            <mode>only-files</mode>
        </config>
        <pd:inputBindings>
            <ns2:ListFilesActivityConfig>
                <fileName>
                    <xsl:value-of select="concat($_globalVariables/ns:GlobalVariables/ProjConfig/inputDir, '*.txt')"/>
                </fileName>
            </ns2:ListFilesActivityConfig>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>446</pd:x>
        <pd:y>20</pd:y>
        <pd:width>374</pd:width>
        <pd:height>214</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$List-Files/ns2:ListFilesActivityOutput/files/fileInfo</pd:over>
            <pd:iterationElementSlot>file</pd:iterationElementSlot>
            <pd:indexSlot>i</pd:indexSlot>
            <pd:activityOutputName/>
            <pd:accumulateOutput>false</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Java Code</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Log File Error</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Java Code</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Catch</pd:from>
            <pd:to>Log File Error</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="Java Code">
            <pd:type>com.tibco.plugin.java.JavaActivity</pd:type>
            <pd:resourceType>ae.javapalette.javaActivity</pd:resourceType>
            <pd:x>601</pd:x>
            <pd:y>93</pd:y>
            <config>
                <fileName>ProcessingMT940JavaCode</fileName>
                <packageName>Processes.ProcessingMT940</packageName>
                <fullsource>package Processes.ProcessingMT940;

import java.util.*;
import java.io.*;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;

import org.apache.commons.lang3.StringUtils;

import com.prowidesoftware.swift.io.RJEReader;
import com.prowidesoftware.swift.model.*;
import com.prowidesoftware.swift.model.field.*;
import com.prowidesoftware.swift.model.mt.AbstractMT;
import com.prowidesoftware.swift.model.mt.mt9xx.MT940;
import com.prowidesoftware.swift.utils.Lib;

public class ProcessingMT940JavaCode{
	
	String textDate = "";
    String initialAmount = "";
    String finalAmount = "";
    String tranDate = "";
    
/****** START SET/GET METHOD, DO NOT MODIFY *****/
	protected String inputDir = "";
	protected String outputDir = "";
	protected String outputFileName = "";
	protected String inputFileName = "";
	protected String bankAccount = "";
	public String getinputDir() {
		return inputDir;
	}
	public void setinputDir(String val) {
		inputDir = val;
	}
	public String getoutputDir() {
		return outputDir;
	}
	public void setoutputDir(String val) {
		outputDir = val;
	}
	public String getoutputFileName() {
		return outputFileName;
	}
	public void setoutputFileName(String val) {
		outputFileName = val;
	}
	public String getinputFileName() {
		return inputFileName;
	}
	public void setinputFileName(String val) {
		inputFileName = val;
	}
	public String getbankAccount() {
		return bankAccount;
	}
	public void setbankAccount(String val) {
		bankAccount = val;
	}
/****** END SET/GET METHOD, DO NOT MODIFY *****/
	public ProcessingMT940JavaCode() {
		
	}
	public void invoke() throws Exception {
/* Available Variables: DO NOT MODIFY
	In  : String inputDir
	In  : String outputDir
	In  : String outputFileName
	In  : String inputFileName
	Out : String outputFileName
	Out : String bankAccount
* Available Variables: DO NOT MODIFY *****/

		try {

			String filePath = this.getinputDir()+ this.getinputFileName();
            String outPath= this.getoutputDir() + this.getoutputFileName();
            
            String regId = "";
            String textDate = this.getTextDate();
             
            
            RJEReader reader = new RJEReader(new File(filePath));
            int regs=0;	
            /*
             * Iterate the reader
             */
            while (reader.hasNext()) {
                /*
                 * Read the message.
                 */ 
                AbstractMT mt = reader.nextMT(); 
                SwiftMessage msg = mt.getSwiftMessage();  
                
                StringBuffer contentFile = new StringBuffer();
                
                MT940 mt940_init = new MT940(msg);
         	    SwiftBlock4 b4_init = mt940_init.getSwiftMessage().getBlock4();
         	    MT940 mt940_final = new MT940(msg.getUnparsedTexts().getTextAsMessage(msg.getUnparsedTexts().size()-1));
         	    
         	    SwiftBlock4 b4_final = mt940_final.getSwiftMessage().getBlock4();
                //System.out.println("b4: " + b4_init);
         	  
                //* Get saldos
                if(b4_init.getTagValue("60F") != null)
                //System.out.println("--"+ ((Field60F)b4_init.getFieldByName("60F")).getAmount());
                	initialAmount = this.cleanText(((Field60F)b4_init.getFieldByName("60F")).getAmount());
                if(b4_final.getTagValue("62F") != null)
                //System.out.println(((Field62F)b4_final.getFieldByName("62F")).getAmount());
                	finalAmount = this.cleanText(((Field62F)b4_final.getFieldByName("62F")).getAmount());
                 
                //Read the first MT940
                regs += this.parseMT940(msg, contentFile); 
                
                for(int i= 0; i&lt;msg.getUnparsedTexts().size();i++){  

                   if(msg.getUnparsedTexts().getTextAsMessage(i).isType(940)) {
                	    
                       //Parse 
                	   regs += this.parseMT940(msg.getUnparsedTexts().getTextAsMessage(i), contentFile);
                        
                   }                
                   
                }
                //Output File Name
                this.setoutputFileName(this.getinputFileName().replace(".txt", "")
                		+ "_"+ this.getbankAccount()+"_"+textDate+".txt");
                
               	outPath= this.getoutputDir() + this.getoutputFileName();
               
                //System.out.println(line);
                FileWriter fw = new FileWriter(outPath, true);
                fw.write(contentFile.toString());
                fw.close();
               	
                System.out.println("Total Regs: "+ regs);                
                
			}
				} catch (Exception e) {
			            e.printStackTrace();
			        }
				
	}
	
	public int parseMT940(SwiftMessage msg, StringBuffer contentFile) {
		int regs =0;
		
		MT940 mt940 = new MT940(msg);
        SwiftBlock1 b1 = mt940.getSwiftMessage().getBlock1();
        //System.out.println("b1: " + b1);
        SwiftBlock2 b2 = mt940.getSwiftMessage().getBlock2();
        //System.out.println("b2: " + b2);
        SwiftBlock3 b3 = mt940.getSwiftMessage().getBlock3();
        //System.out.println("b3: " + b3); 
        SwiftBlock4 b4 = mt940.getSwiftMessage().getBlock4();
        //System.out.println("b4: " + b4);
        //SwiftBlock5 b5 = mt940.getSwiftMessage().getBlock5();
        //System.out.println("b5: " + b5);
        //Account Number to identify the Business Unit
        this.setbankAccount(cleanText(b4.getTagValue(Field25.NAME)));
        tranDate = b4.getFieldByName(Field61.NAME).getComponent(Field61.DATE);
                             
        //System.out.println("--&gt;"+b4.getFieldsByName(Field61.NAME).length);
        regs += b4.getFieldsByName(Field61.NAME).length;
        for (int j=0; j&lt;b4.getFieldsByName(Field61.NAME).length;j++) { 
            
            contentFile.append(this.parseOneMT940(b4, j)); 
        }            
        
        return regs;
	}
	
	public String parseOneMT940(SwiftBlock4 b4, int j) {
		StringBuffer line = new StringBuffer();     
		
		Field61 tx = (Field61) b4.getFieldsByName(Field61.NAME)[j]; 
        Field20 tx20 = (Field20) b4.getFieldByName(Field20.NAME);
        Field21 tx21 = (Field21) b4.getFieldByName(Field21.NAME);
        Field25 tx25 = (Field25) b4.getFieldByName(Field25.NAME);
        Field28C tx28 = (Field28C) b4.getFieldByName(Field28C.NAME);
        Field86 tx86 = (Field86) b4.getFieldsByName(Field86.NAME)[j];
         
        String studentReference ="";
        String tipoDeposito = "";
        
        String[] tx86split = this.getSplitComponent86(tx86.getComponent1());
        //System.out.println(tx86split[0]+ " ----- " + tx86split[1]);
        studentReference =	tx86split[1];
        tipoDeposito = tx86split[0]; 
        
        line.append( textDate + "|" + this.getinputFileName()+"|");
        
        //Transaction type TIPO_TRANSACCION
        if(tx.getComponent(Field61.DEBITCREDIT_MARK).equals("C")){
     	   if(isNumeric(studentReference)) {
            line.append("PAGO ALUMNO REF" + "|");
     	   }else {
     		   line.append("PAGO ALUMNO NO REF" + "|"); 
     	   } 
        }else{
     	   line.append("EGRESO" + "|");

        }
        //c86_referencia_alumno| 
        line.append(studentReference+"|");
        //c61_fecha_pago|c61_fecha_posteo|c61_monto|
        line.append(tx.getComponent(Field61.DATE)+"|");
        line.append(tx.getComponent(Field61.ENTRY_DATE)+"|");
        line.append(tx.getComponent(Field61.AMOUNT)+"|");
        //c61_num_aprobacion|
        line.append(cleanText(tx.getComponent(Field61.SUPPLEMENTARY_DETAILS))+"|");
        //c20_referencia_trans|
        line.append(cleanText(tx20.getComponent(Field20.REFERENCE))+"|");
         
        //c21_nombre_propietario|c25_cuenta_bancaria|
        line.append(cleanText(tx21.getComponent(Field21.REFERENCE))+"|");
        line.append(cleanText(tx25.getComponent(Field25.ACCOUNT))+"|");
        
        //c28_num_edo_cuenta|
        if(tx28 != null) {
     	   line.append(cleanText(tx28.getValue())+"|");
        }else {
     	   line.append( "|");
        }
        
        //c61_cod_leyenda| 
        line.append(cleanText(tx.getComponent9()) + "|");
        //c86_tipo_deposito|
        line.append(tipoDeposito + "|");
        
        //c61_tipo_mov|
        line.append(cleanText(tx.getComponent(Field61.DEBITCREDIT_MARK)) + "|");
        //c61_moneda|  
        line.append(this.getCurrency(tx.getComponent6()) + "|");
        //c60F_saldo_inicial|	                       
        line.append(initialAmount+ "|");
        //c62F_saldo_cierre|
        line.append(finalAmount+ "|");	                       
        
        //c61_completo|c86_completo  
        line.append(cleanText(tx.getValue()) +"|");	                    
        line.append(cleanText(tx86.getValue()));
        //End of line
        line.append("\n"); 
        
        return line.toString();
	}
	
	public String cleanText(String text) {
		String textResult = text.trim();
		
		textResult = textResult.replace("\r", "").replace("\n","").replace("   ", "");
		
		return textResult;
	}
	
	public String getTextDate() {
		//Get current datetime for name and line
		LocalDateTime date = LocalDateTime.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyyMMdd-HHmmss");
        String text = date.format(formatter);
        //System.out.println(text);
        
        return text;
	}
	
	public String getField86TipoDeposito(String complemento) {
		String res = complemento.substring(0, 3);
		String lastCh = res.charAt(2)+"";
		
		if(isNumeric(lastCh)){
			res = res.substring(0, 2);
		} 
		
		return res;
	}
	
	public boolean isNumeric(String text) {
		boolean res = true;
		
		try {
			Long.parseLong(text); 
		}
		catch(Exception exp){
			//Char is not a number 
			res = false;
		}
		 
		return res;
		
	}
	
	public String getCurrency(String code) {
		String currencyName = "MN";
		
		if(!code.equals("N")) {
			currencyName ="DLS";
		}
		
		return currencyName;
	}
	
	public String[] getSplitComponent86(String component86) {
		String[] splitComponent86 = component86.split("   ");
		
		splitComponent86[1]= splitComponent86[0];
		splitComponent86[0]= this.getField86TipoDeposito(splitComponent86[1]);
		if(splitComponent86[0].length()&lt;3) {
			splitComponent86[1]= splitComponent86[1].replace(splitComponent86[0], "");
		}
				
		return splitComponent86;
	}
	
}
</fullsource>
                <javaArchive>/Shared Resources/AliasLibrary.aliaslib</javaArchive>
                <inputData>
                    <row>
                        <fieldName>inputDir</fieldName>
                        <fieldType>string</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                    <row>
                        <fieldName>outputDir</fieldName>
                        <fieldType>string</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                    <row>
                        <fieldName>outputFileName</fieldName>
                        <fieldType>string</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                    <row>
                        <fieldName>inputFileName</fieldName>
                        <fieldType>string</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                </inputData>
                <outputData>
                    <row>
                        <fieldName>outputFileName</fieldName>
                        <fieldType>string</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                    <row>
                        <fieldName>bankAccount</fieldName>
                        <fieldType>string</fieldType>
                        <fieldRequired>optional</fieldRequired>
                    </row>
                </outputData>
                <byteCode>
                    <class>
                        <name>ProcessingMT940JavaCode</name>
                        <byteCode></byteCode>
                    </class>
                </byteCode>
            </config>
            <pd:inputBindings>
                <javaCodeActivityInput>
                    <inputDir>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ProjConfig/inputDir"/>
                    </inputDir>
                    <outputDir>
                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/ProjConfig/outputDir"/>
                    </outputDir>
                    <outputFileName>
                        <xsl:value-of select="'output3.csv'"/>
                    </outputFileName>
                    <inputFileName>
                        <xsl:value-of select="$file/fileInfo/fileName"/>
                    </inputFileName>
                </javaCodeActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Catch">
            <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
            <pd:resourceType>ae.activities.catch</pd:resourceType>
            <pd:x>598</pd:x>
            <pd:y>172</pd:y>
            <pd:handler>true</pd:handler>
            <config>
                <catchAll>true</catchAll>
            </config>
            <pd:inputBindings/>
        </pd:activity>
        <pd:activity name="Log File Error">
            <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
            <pd:resourceType>ae.activities.log</pd:resourceType>
            <pd:x>713</pd:x>
            <pd:y>175</pd:y>
            <config>
                <role>User</role>
            </config>
            <pd:inputBindings>
                <pfx:ActivityInput>
                    <message>
                        <xsl:value-of select="concat('Error parsing MT940:', tib:render-xml($Catch/exceptiondata))"/>
                    </message>
                    <msgCode>
                        <xsl:value-of select="'E001'"/>
                    </msgCode>
                </pfx:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="Catch-1">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>347</pd:x>
        <pd:y>377</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Log Process Error">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>496</pd:x>
        <pd:y>376</pd:y>
        <config>
            <role>User</role>
        </config>
        <pd:inputBindings>
            <pfx:ActivityInput>
                <message>
                    <xsl:value-of select="concat('Error on ' , $_processContext/ns1:ProcessContext/ProjectName ,tib:render-xml($Catch-1/exceptiondata))"/>
                </message>
                <msgCode>
                    <xsl:value-of select="'E002'"/>
                </msgCode>
            </pfx:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>657</pd:x>
        <pd:y>376</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <pfx2:ActivityInput>
                <message>
                    <xsl:value-of select="concat('Error on ' , $_processContext/ns1:ProcessContext/ProjectName ,tib:render-xml($Catch-1/exceptiondata))"/>
                </message>
                <messageCode>
                    <xsl:value-of select="'E002'"/>
                </messageCode>
            </pfx2:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Start Log">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>185</pd:x>
        <pd:y>104</pd:y>
        <config>
            <role>User</role>
        </config>
        <pd:inputBindings>
            <pfx:ActivityInput>
                <message>
                    <xsl:value-of select="concat('Starting process ', $_processContext/ns1:ProcessContext/ProjectName)"/>
                </message>
                <msgCode>
                    <xsl:value-of select="'A001'"/>
                </msgCode>
            </pfx:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="End Log">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>964</pd:x>
        <pd:y>123</pd:y>
        <config>
            <role>User</role>
        </config>
        <pd:inputBindings>
            <pfx:ActivityInput>
                <message>
                    <xsl:value-of select="concat('Process ending ',$_processContext/ns1:ProcessContext/ProjectName)"/>
                </message>
                <msgCode>
                    <xsl:value-of select="'A002'"/>
                </msgCode>
            </pfx:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Start Log</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>End Log</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>List Files</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch-1</pd:from>
        <pd:to>Log Process Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log Process Error</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start Log</pd:from>
        <pd:to>List Files</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>End Log</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>