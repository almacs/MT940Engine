<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns0="http://www.tibco.com/namespaces/tnt/plugins/file/v2" xmlns:ns2="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <pd:name>Processes/SaveInfoInDB.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startX>45</pd:startX>
    <pd:startY>93</pd:startY>
    <pd:returnBindings/>
    <pd:endName>End</pd:endName>
    <pd:endX>1005</pd:endX>
    <pd:endY>110</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1702995733577</pd:targetNamespace>
    <pd:activity name="List Files">
        <pd:type>com.tibco.plugin.file.ListFilesActivity</pd:type>
        <pd:resourceType>ae.activities.ListFilesActivity</pd:resourceType>
        <pd:x>186</pd:x>
        <pd:y>94</pd:y>
        <config>
            <mode>only-files</mode>
        </config>
        <pd:inputBindings>
            <ns2:ListFilesActivityConfig>
                <fileName>
                    <xsl:value-of select="concat($_globalVariables/ns:GlobalVariables/ProjConfig/outputDir, '*.txt')"/>
                </fileName>
            </ns2:ListFilesActivityConfig>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>290</pd:x>
        <pd:y>3</pd:y>
        <pd:width>541</pd:width>
        <pd:height>253</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$List-Files/ns2:ListFilesActivityOutput/files/fileInfo</pd:over>
            <pd:iterationElementSlot>file</pd:iterationElementSlot>
            <pd:indexSlot>i</pd:indexSlot>
            <pd:activityOutputName/>
            <pd:accumulateOutput>false</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Read File</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>JDBC Update</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Read File</pd:from>
            <pd:to>Parse Data</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Parse Data</pd:from>
            <pd:to>JDBC Update</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="JDBC Update">
            <pd:type>com.tibco.plugin.jdbc.JDBCUpdateActivity</pd:type>
            <pd:resourceType>ae.activities.JDBCUpdateActivity</pd:resourceType>
            <pd:x>684</pd:x>
            <pd:y>101</pd:y>
            <config>
                <timeout>10</timeout>
                <commit>false</commit>
                <emptyStrAsNil>false</emptyStrAsNil>
                <jdbcSharedConfig>/Shared Resources/JDBC Connection.sharedjdbc</jdbcSharedConfig>
                <statement>insert into  MT940_BBVA_2_ACS (ID_EJECUCION,
NOMBRE_ARCHIVO,
TIPO_TRANSACCION,
C86_REFERENCIA_ALUMNO,
C61_FECHA_PAGO,
C61_FECHA_POSTEO,
C61_MONTO,
C61_NUM_APROBACION,
C20_REFERENCIA_TRANS,
C21_NOMBRE_PROPIETARIO,
C25_CUENTA_BANCARIA,
C28_NUM_EDO_CUENTA,
C61_COD_LEYENDA,
C86_TIPO_DEPOSITO,
C61_TIPO_MOV,
C61_MONEDA,
C60F_SALDO_INICIAL,
C62F_SALDO_CIERRE,
C61_COMPLETO,
C86_COMPLETO)
values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)</statement>
                <batchUpdate>true</batchUpdate>
                <Prepared_Param_DataType>
                    <parameter>
                        <parameterName>p_ID_EJECUCION</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>p_NOMBRE_ARCHIVO</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>p_TIPO_TRANSACCION</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>p_C86_REFERENCIA_ALUMNO</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>p_C61_FECHA_PAGO</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>p_C61_FECHA_POSTEO</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>p_C61_MONTO</parameterName>
                        <dataType>NUMERIC</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>p_C61_NUM_APROBACION</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>p_C20_REFERENCIA_TRANS</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>p_C21_NOMBRE_PROPIETARIO</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>p_C25_CUENTA_BANCARIA</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>p_C28_NUM_EDO_CUENTA</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>p_C61_COD_LEYENDA</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>p_C86_TIPO_DEPOSITO</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>p_C61_TIPO_MOV</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>p_C61_MONEDA</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>p_C60F_SALDO_INICIAL</parameterName>
                        <dataType>NUMERIC</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>p_C62F_SALDO_CIERRE</parameterName>
                        <dataType>NUMERIC</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>p_C61_COMPLETO</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>p_C86_COMPLETO</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                </Prepared_Param_DataType>
            </config>
            <pd:inputBindings>
                <jdbcUpdateActivityInput>
                    <xsl:for-each select="$Parse-Data/Output/Rows/root">
                        <Record>
                            <p_ID_EJECUCION>
                                <xsl:value-of select="id_ejecucion"/>
                            </p_ID_EJECUCION>
                            <p_NOMBRE_ARCHIVO>
                                <xsl:choose>
                                    <xsl:when test="exists(nombre_archivo)">
                                        <xsl:value-of select="nombre_archivo"/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </p_NOMBRE_ARCHIVO>
                            <p_TIPO_TRANSACCION>
                                <xsl:choose>
                                    <xsl:when test="exists(tipo_transaccion)">
                                        <xsl:value-of select="tipo_transaccion"/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </p_TIPO_TRANSACCION>
                            <p_C86_REFERENCIA_ALUMNO>
                                <xsl:choose>
                                    <xsl:when test="exists(substring(c86_referencia_alumno, 0,20))">
                                        <xsl:value-of select="substring(c86_referencia_alumno, 0,20)"/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </p_C86_REFERENCIA_ALUMNO>
                            <p_C61_FECHA_PAGO>
                                <xsl:choose>
                                    <xsl:when test="exists(c61_fecha_pago)">
                                        <xsl:value-of select="c61_fecha_pago"/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </p_C61_FECHA_PAGO>
                            <p_C61_FECHA_POSTEO>
                                <xsl:choose>
                                    <xsl:when test="exists(c61_fecha_posteo)">
                                        <xsl:value-of select="c61_fecha_posteo"/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </p_C61_FECHA_POSTEO>
                            <p_C61_MONTO>
                                <xsl:choose>
                                    <xsl:when test="exists(concat(substring-before(c61_monto, ','),'.', substring-after(c61_monto, ',') ))">
                                        <xsl:value-of select="concat(substring-before(c61_monto, ','),'.', substring-after(c61_monto, ',') )"/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </p_C61_MONTO>
                            <p_C61_NUM_APROBACION>
                                <xsl:choose>
                                    <xsl:when test="exists(c61_num_aprobacion)">
                                        <xsl:value-of select="c61_num_aprobacion"/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </p_C61_NUM_APROBACION>
                            <p_C20_REFERENCIA_TRANS>
                                <xsl:choose>
                                    <xsl:when test="exists(c20_referencia_trans)">
                                        <xsl:value-of select="c20_referencia_trans"/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </p_C20_REFERENCIA_TRANS>
                            <p_C21_NOMBRE_PROPIETARIO>
                                <xsl:choose>
                                    <xsl:when test="exists(c21_nombre_propietario)">
                                        <xsl:value-of select="c21_nombre_propietario"/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </p_C21_NOMBRE_PROPIETARIO>
                            <p_C25_CUENTA_BANCARIA>
                                <xsl:value-of select="c25_cuenta_bancaria"/>
                            </p_C25_CUENTA_BANCARIA>
                            <p_C28_NUM_EDO_CUENTA>
                                <xsl:choose>
                                    <xsl:when test="exists(c28_num_edo_cuenta)">
                                        <xsl:value-of select="c28_num_edo_cuenta"/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </p_C28_NUM_EDO_CUENTA>
                            <p_C61_COD_LEYENDA>
                                <xsl:choose>
                                    <xsl:when test="exists(c61_cod_leyenda)">
                                        <xsl:value-of select="c61_cod_leyenda"/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </p_C61_COD_LEYENDA>
                            <p_C86_TIPO_DEPOSITO>
                                <xsl:choose>
                                    <xsl:when test="exists(c86_tipo_deposito)">
                                        <xsl:value-of select="c86_tipo_deposito"/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </p_C86_TIPO_DEPOSITO>
                            <p_C61_TIPO_MOV>
                                <xsl:choose>
                                    <xsl:when test="exists(c61_tipo_mov)">
                                        <xsl:value-of select="c61_tipo_mov"/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </p_C61_TIPO_MOV>
                            <p_C61_MONEDA>
                                <xsl:value-of select="c61_moneda"/>
                            </p_C61_MONEDA>
                            <p_C60F_SALDO_INICIAL>
                                <xsl:choose>
                                    <xsl:when test="exists(concat(substring-before(c60F_saldo_inicial, ','),'.', substring-after(c60F_saldo_inicial, ',') ))">
                                        <xsl:value-of select="concat(substring-before(c60F_saldo_inicial, ','),'.', substring-after(c60F_saldo_inicial, ',') )"/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </p_C60F_SALDO_INICIAL>
                            <p_C62F_SALDO_CIERRE>
                                <xsl:value-of select="concat(substring-before(c62F_saldo_cierre, ','),'.', substring-after(c62F_saldo_cierre, ',') )"/>
                            </p_C62F_SALDO_CIERRE>
                            <p_C61_COMPLETO>
                                <xsl:choose>
                                    <xsl:when test="exists(c61_completo)">
                                        <xsl:value-of select="c61_completo"/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </p_C61_COMPLETO>
                            <p_C86_COMPLETO>
                                <xsl:choose>
                                    <xsl:when test="exists(c86_completo)">
                                        <xsl:value-of select="c86_completo"/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </p_C86_COMPLETO>
                        </Record>
                    </xsl:for-each>
                </jdbcUpdateActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Read File">
            <pd:type>com.tibco.plugin.file.FileReadActivity</pd:type>
            <pd:resourceType>ae.activities.FileReadActivity</pd:resourceType>
            <pd:x>389</pd:x>
            <pd:y>104</pd:y>
            <config>
                <encoding>text</encoding>
            </config>
            <pd:inputBindings>
                <ns0:ReadActivityInputClass>
                    <fileName>
                        <xsl:value-of select="$file/fileInfo/fullName"/>
                    </fileName>
                </ns0:ReadActivityInputClass>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Parse Data">
            <pd:type>com.tibco.plugin.parse.ParseActivity</pd:type>
            <pd:resourceType>ae.activities.ParseActivity</pd:resourceType>
            <pd:x>538</pd:x>
            <pd:y>100</pd:y>
            <config>
                <InputType>String</InputType>
                <Encoding>ASCII</Encoding>
                <ParseSharedConfig>/Shared Resources/Output Data Formar.sharedparse</ParseSharedConfig>
            </config>
            <pd:inputBindings>
                <Input>
                    <text>
                        <xsl:value-of select="$Read-File/ns2:ReadActivityOutputTextClass/fileContent/textContent"/>
                    </text>
                    <noOfRecords>
                        <xsl:value-of select="-1"/>
                    </noOfRecords>
                </Input>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>List Files</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>List Files</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>